<?xml version="1.0" encoding="utf-8" ?>
<Project DefaultTargets="integrate" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="Resource\Build\MSBuild.Community.Tasks.targets" />
	<Import Project="Resource\Build\NCoverExplorer.MSBuildTasks.targets"/>
	<!-- Main build entry file (extends development builds)-->
	<PropertyGroup>
		<!--
			 Primary configuration properties (override them via command line
			 if needed
		-->
		<BuildPath Condition="$(BuildPath)==''">$(MSBuildProjectDirectory)\Build</BuildPath>
		<Version Condition="$(Version)==''">0.0.0.0</Version>
		<Configuration Condition="$(Configuration)==''">Release</Configuration>
		<ArtifactDirectory Condition="$(ArtifactDirectory)==''">$(BuildPath)\Artifact</ArtifactDirectory>
		<PublicationRoot Condition="$(PublicationRoot)==''">$(BuildPath)\_Package</PublicationRoot>
		<PackageDirectory Condition="$(PackageDirectory)==''">$(BuildPath)\_Package\$(Version)</PackageDirectory>
		<!--
			Derived configuration properties
				 -->
		<TestPath>$(BuildPath)\Test</TestPath>
		<StackPath>$(BuildPath)\Stack</StackPath>
		<TempPath>$(BuildPath)\Temp</TempPath>
		<RawPath>$(BuildPath)\Raw</RawPath>

		<ReadMe>ReadMe.txt</ReadMe>
		
		<LibrarySource>Source\Lokad.Shared\bin\$(Configuration)</LibrarySource>
		<QualitySource>Source\Lokad.Quality\bin\$(Configuration)</QualitySource>
		<StackSource>Source\Lokad.Stack\bin\$(Configuration)</StackSource>
		<TestingSource>Source\Lokad.Testing\bin\$(Configuration)</TestingSource>
		<Converter>Helpers\Lokad.ReNamespace\bin\$(Configuration)\Lokad.ReNamespace.exe</Converter>
		
		<SampleSource>Sample</SampleSource>

		<SourceExclusions>**\.svn\**\*.*;**\_svn\**\*.*;**\*.user;**\*.suo;**\*.db;**\bin\**\*.*;**\obj\**\*.*;</SourceExclusions>

		<ILMerge>Resource\Tool\ILMerge\ILMerge.exe</ILMerge>
		<Linker>Host\Lokad.Linker\bin\$(Configuration)\Lokad.Linker.exe</Linker>
	</PropertyGroup>


	<ItemGroup>
		<Tokens Include="StackPackage"><ReplacementValue>$(MSBuildProjectName)-Stack-$(Version).zip</ReplacementValue></Tokens>
		<Tokens Include="LibraryPackage"><ReplacementValue>$(MSBuildProjectName)-Lib-$(Version).zip</ReplacementValue></Tokens>
		<Tokens Include="SourcePackage"><ReplacementValue>$(MSBuildProjectName)-Source-$(Version).zip</ReplacementValue></Tokens>
		<Tokens Include="Version"><ReplacementValue>$(Version)</ReplacementValue></Tokens>
	</ItemGroup>

	<!-- 
	 Solution redirects. Every VS project normally knows how to support these targets
		-->
	<Target Name="Build">
		<MSBuild Projects="$(MSBuildProjectName).sln" Targets="Build" Properties="Configuration=$(Configuration);BuildConstants=NET35"/>
	</Target>

	<Target Name="Clean">
		<MSBuild Projects="$(MSBuildProjectName).sln" Targets="Clean" Properties="Configuration=$(Configuration)"/>

		<CreateItem Include="**/Debug/**/*.*;**/Release/**/*.*">
			<Output ItemName="_binaryFiles" TaskParameter="Include"/>
		</CreateItem>
		<Delete Files="@(_binaryFiles)" TreatErrorsAsWarnings="true"/>
		<RemoveDir Directories="$(BuildPath)" />
	</Target>

	<Target Name="Rebuild" DependsOnTargets="Clean;Build;" />
	
	<Target Name="Integrate" DependsOnTargets="Clean;Test;Report" />
	<Target Name="Release" DependsOnTargets="Clean;_Version;Build;Test;Report;Distrib" />

	<Target Name="Report" DependsOnTargets="Clean;Build;Copy">
		<MakeDir Directories="$(ArtifactDirectory)" />
		<FxCop ToolPath="Resource/Tool/FxCop" ProjectFile="$(MSBuildProjectName).FxCop" AnalysisReportFileName="$(ArtifactDirectory)/$(MSBuildProjectName).fxcop-result.xml"/>
	</Target>

	<!--
	 Copies built items to the distrib directory
	 -->
	<Target Name="Copy" DependsOnTargets="Build">
		<MakeDir Directories="$(BuildPath);$(StackPath);$(TempPath)"/>

		<!--Library-->
		<CreateItem Include="Source\**\bin\$(Configuration)\*.*">
			<Output ItemName="rawFiles" TaskParameter="Include"/>
		</CreateItem>
		<Copy SourceFiles="@(rawFiles)" DestinationFolder="$(RawPath)" />
		
		
		<!--Merge-->
		<Exec Command="$(ILMerge) &quot;$(RawPath)\Lokad.Shared.dll&quot; &quot;$(RawPath)/Lokad.Logging.dll&quot; &quot;$(RawPath)/Lokad.ActionPolicy.dll&quot; /out:&quot;$(StackPath)/Lokad.Shared.dll&quot; /keyfile:SharedKey.snk /xmldocs=true /ver:$(Version) /attr:&quot;$(RawPath)/Lokad.Shared.dll&quot;" />
		<Exec Command="$(ILMerge) &quot;$(RawPath)\Lokad.Quality.dll&quot; &quot;$(RawPath)/Mono.Cecil.dll&quot; /out:&quot;$(StackPath)/Lokad.Quality.dll&quot; /keyfile:SharedKey.snk /xmldocs=true /ver:$(Version) /attr:&quot;$(RawPath)/Lokad.Quality.dll&quot;" />
		<Exec Command="$(ILMerge) &quot;$(RawPath)\Lokad.Stack.dll&quot; &quot;$(RawPath)/Autofac.dll&quot; &quot;$(RawPath)/log4net.dll&quot; /out:&quot;$(StackPath)/Lokad.Stack.dll&quot; /keyfile:SharedKey.snk /xmldocs=true /ver:$(Version)  /attr:&quot;$(RawPath)/Lokad.Stack.dll&quot;" />
		<Exec Command="$(ILMerge) &quot;$(RawPath)\Lokad.Testing.dll&quot; &quot;$(RawPath)/nunit.framework.dll&quot; &quot;$(RawPath)/Rhino.Mocks.dll&quot; /out:&quot;$(StackPath)/Lokad.Testing.dll&quot; /keyfile:SharedKey.snk /xmldocs=true /ver:$(Version)  /attr:&quot;$(RawPath)/Lokad.Testing.dll&quot;" />
		<!--Update references-->
		<Exec Command="$(Linker) &quot;$(StackPath)\Lokad.Stack.dll&quot; &quot;$(RawPath)\Lokad.Logging.dll&quot; &quot;$(StackPath)\Lokad.Shared.dll&quot; &quot;$(StackPath)\Lokad.Stack.dll&quot;" />
		<Exec Command="$(Linker) &quot;$(StackPath)\Lokad.Stack.dll&quot; &quot;$(RawPath)\Lokad.ActionPolicy.dll&quot; &quot;$(StackPath)\Lokad.Shared.dll&quot; &quot;$(StackPath)\Lokad.Stack.dll&quot;" />
		<Exec Command="sn.exe -Ra &quot;$(StackPath)\Lokad.Stack.dll&quot; SharedKey.snk" />
		<Exec Command="$(Linker) &quot;$(StackPath)\Lokad.Testing.dll&quot; &quot;$(RawPath)\Autofac.dll&quot; &quot;$(StackPath)\Lokad.Stack.dll&quot; &quot;$(StackPath)\Lokad.Testing.dll&quot;" />
		<Exec Command="sn.exe -Ra &quot;$(StackPath)\Lokad.Testing.dll&quot; SharedKey.snk" />
				
		
		<!--All Tests-->
		<CreateItem Include="Test\**\bin\$(Configuration)\*.*" Exclude="Test\**\bin\$(Configuration)\*.xml;Test\**\bin\$(Configuration)\*.pdb;">
			<Output ItemName="TestFiles" TaskParameter="Include"/>
		</CreateItem>
		<Copy SourceFiles="@(TestFiles)" DestinationFolder="$(TestPath)" />
	</Target>

	<Target Name="Config">
		<Message Text="This sub-solution does not need configuration" />
	</Target>
	
	<Target Name="Test" DependsOnTargets="Build;Copy">
		<MakeDir Directories="$(ArtifactDirectory)" />

		<CreateItem Include="$(TestPath)\*.Test.dll;$(TestPath)\*.Tests.dll">
			<Output ItemName="_testFiles" TaskParameter="Include"/>
		</CreateItem>

		<CreateItem Include="$(TestPath)\Lokad.*.dll" Exclude="$(TestPath)\*.Test.dll;$(TestPath)\*.Tests.dll">
			<Output ItemName="_coverageFiles" TaskParameter="Include"/>
		</CreateItem>

		<!--@(_testFiles->'&quot;%(FullPath)&quot;', ' ')-->
		<!--
		Important: if this code breaks down and you are running 64 bit machine,
		then you have to force NUnit-console and NCover to 32 bit mode
		with CorFlags.exe from .NET SDK 2.0 (included in NCover and NUnit folders)
		-->
		<NCover ToolPath="Resource\Tool\NCover"
			CommandLineExe="Resource/Tool/NUnit/nunit-console-x86.exe"
			CommandLineArgs="@(_testFiles->'&quot;%(FullPath)&quot;', ' ') /nologo /noshadow /xml=&quot;$(ArtifactDirectory)\$(MSBuildProjectName).Tests-result.xml&quot;"
			AssemblyList="@(_coverageFiles)"
			CoverageFile="$(ArtifactDirectory)\$(MSBuildProjectName)-coverage.xml"
			LogFile="$(ArtifactDirectory)\$(MSBuildProjectName)-coverage.log"
			ExcludeAttributes="Lokad.Quality.NoCodeCoverageAttribute;System.Runtime.CompilerServices.CompilerGeneratedAttribute;System.CodeDom.Compiler.GeneratedCodeAttribute"
			ContinueOnError="false"
		/>

		<NCoverExplorer
			ToolPath="Resource\Tool\NCoverExplorer"
			ProjectName="$(MSBuildProjectName)"
			ReportType="ModuleClassSummary"
			XmlReportName="$(ArtifactDirectory)\$(MSBuildProjectName).fCoverage-result.xml"
			HtmlReportName="$(ArtifactDirectory)\$(MSBuildProjectName).fCoverage-summary.html"
			ShowExcluded="True"
			SatisfactoryCoverage="75"
			MinimumCoverage="75"
			Sort="FunctionCoverageAscending"
			CoverageFiles="$(ArtifactDirectory)\$(MSBuildProjectName)-coverage.xml"
		/>
	</Target>

	<Target Name="_Version">
		<CreateItem Include="**\GlobalAssemblyInfo.cs">
			<Output ItemName="_VersionPaths" TaskParameter="Include"/>
		</CreateItem>
		<CreateItem Include="@(_VersionPaths->'%(SubFolder)%(RecursiveDir)VersionAssemblyInfo.cs')">
			<Output ItemName="_VersionFiles" TaskParameter="Include"/>
		</CreateItem>
		<Time Format="yyyy-MM-dd HH:mm">
			<Output TaskParameter="FormattedTime" PropertyName="BuildTime" />
		</Time>
		<AssemblyInfo OutputFile="%(_VersionFiles.FullPath)" CodeLanguage="CS"
									AssemblyVersion="$(Version)"
									AssemblyFileVersion="$(Version)"
									AssemblyConfiguration="$(Configuration) built on $(BuildTime)" />
	</Target>


	<Target Name="WipeResources">
		<!--Wipe old version files-->
		<CreateItem Include="**\VersionAssemblyInfo.cs">
			<Output ItemName="_VersionPaths" TaskParameter="Include"/>
		</CreateItem>
		<Delete Files="@(_VersionPaths)" />
	</Target>


	<Target Name="GenerateHelp" DependsOnTargets="Build;Copy" Condition="$(DisableHelp)==''">
		<Exec Command="Resource\Tool\SHFB\SandcastleBuilderConsole.exe $(MSBuildProjectName).shfb" />
	</Target>

	<Target Name="Distrib" DependsOnTargets="Clean;Build;Copy;Config;GenerateHelp">
		<MakeDir Directories="$(PackageDirectory);$(TempPath)" />

		<!--Source.zip-->
		<CreateItem Include="**\*.*" Exclude="Resource\Tool\**\*.*;Build\**\*.*;Resource\Build\Profile.Local\*.*;$(SourceExclusions)">
			<Output ItemName="_SourceFiles" TaskParameter="Include" />
		</CreateItem>
		<Zip Files="@(_SourceFiles)" ZipFileName="$(PackageDirectory)\$(MSBuildProjectName)-Source-$(Version).zip" Flatten="false" />
		
		<!--Samples.zip-->
		<CreateItem Include="$(SampleSource)\Shared\**\*.*" Exclude="$(SourceExclusions)">
			<Output ItemName="sharedSamples" TaskParameter="Include" />
		</CreateItem>
		<Zip Files="@(sharedSamples)" ZipFileName="$(TempPath)\Samples.zip" Flatten="false" WorkingDirectory="$(SampleSource)\Shared" />

		<!--Lib-->
		<CreateItem Include="$(RawPath)\*.*;$(ReadMe);$(TempPath)\Samples.zip">
			<Output ItemName="_libFiles" TaskParameter="Include" />
		</CreateItem>
		<Zip Files="@(_libFiles)" ZipFileName="$(PackageDirectory)\$(MSBuildProjectName)-Lib-$(Version).zip" Flatten="true" />

		<!--Stack-->
		<CreateItem Include="$(StackPath)\Lokad.*;$(ReadMe);$(TempPath)\Samples.zip">
			<Output ItemName="_stackFiles" TaskParameter="Include" />
		</CreateItem>
		<Zip Files="@(_stackFiles)" ZipFileName="$(PackageDirectory)\$(MSBuildProjectName)-Stack-$(Version).zip" Flatten="true" />
		

		<!--Indexes-->
		<MakeDir Directories="$(TempPath)" />
		<Copy SourceFiles="Resource\Files\index.template;" DestinationFolder="$(TempPath)" />	
		<TemplateFile Template="$(TempPath)\index.template" OutputFile="index.out" Tokens="@(Tokens)" />
		<Copy SourceFiles="$(TempPath)\index.out" DestinationFiles="$(PublicationRoot)\index.htm" />
		
	</Target>
</Project>
