<Configuration>
  <CodeStyleSettings>
    <ExternalPath>CodeStyle.xml</ExternalPath>
    <Sharing>SOLUTION</Sharing>
    <CSharp>
      <FormatSettings>
        <ALIGN_MULTILINE_ARGUMENT>False</ALIGN_MULTILINE_ARGUMENT>
        <ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER>False</ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER>
        <ALIGN_MULTILINE_EXPRESSION>False</ALIGN_MULTILINE_EXPRESSION>
        <ALIGN_MULTILINE_PARAMETER>False</ALIGN_MULTILINE_PARAMETER>
        <ALIGN_MULTIPLE_DECLARATION>False</ALIGN_MULTIPLE_DECLARATION>
        <EXPLICIT_INTERNAL_MODIFIER>False</EXPLICIT_INTERNAL_MODIFIER>
        <EXPLICIT_PRIVATE_MODIFIER>False</EXPLICIT_PRIVATE_MODIFIER>
        <INDENT_ANONYMOUS_METHOD_BLOCK>False</INDENT_ANONYMOUS_METHOD_BLOCK>
        <INDENT_EMBRACED_INITIALIZER_BLOCK>False</INDENT_EMBRACED_INITIALIZER_BLOCK>
        <INDENT_SIZE>4</INDENT_SIZE>
        <INSERT_TABS>True</INSERT_TABS>
        <MODIFIERS_ORDER IsNull="False">
          <Item>public</Item>
          <Item>protected</Item>
          <Item>internal</Item>
          <Item>private</Item>
          <Item>new</Item>
          <Item>abstract</Item>
          <Item>virtual</Item>
          <Item>override</Item>
          <Item>sealed</Item>
          <Item>static</Item>
          <Item>readonly</Item>
          <Item>extern</Item>
          <Item>unsafe</Item>
          <Item>volatile</Item>
        </MODIFIERS_ORDER>
        <SPACE_BEFORE_ATTRIBUTE_COLON>True</SPACE_BEFORE_ATTRIBUTE_COLON>
      </FormatSettings>
      <UsingsSettings />
      <Naming2 />
    </CSharp>
    <VB>
      <FormatSettings>
        <INDENT_SIZE>4</INDENT_SIZE>
      </FormatSettings>
      <ImportsSettings />
      <Naming2 />
    </VB>
    <FileHeader Region="(c)2009 Lokad - New BSD license"><![CDATA[Copyright (c) Lokad 2009 
Company: http://www.lokad.com
This code is released under the terms of the new BSD licence]]></FileHeader>
    <GenerateMemberBody />
    <Naming2>
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="Locals" />
      <PredefinedRule Inspect="True" Prefix="_" Suffix="" Style="aaBb" ElementKind="NotPublicInstanceFields" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="NotPublicStaticFields" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="Parameters" />
    </Naming2>
  </CodeStyleSettings>
  <SharedSolutionTemplateManager>
    <LiveTemplates>
      <Template uid="58666703-b89b-4d9d-9a6c-caee9104a7a8" shortcut="ntc" description="NUnit Test Case" text="		[NUnit.Framework.TestAttribute]&#xD;&#xA;		public void $Test$()&#xD;&#xA;		{&#xD;&#xA;			$END$&#xD;&#xA;		}" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="TypeMember" minimumLanguageVersion="2.0" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="Test" expression="" initialRange="0" />
        </Variables>
        <CustomProperties />
      </Template>
      <Template uid="b00a07e7-4f19-4189-8c42-3206f8468a54" shortcut="ntf" description="NUnit Test Fixture" text="[NUnit.Framework.TestFixtureAttribute]&#xD;&#xA;public sealed class $TypeToTest$Tests&#xD;&#xA;{&#xD;&#xA;	[NUnit.Framework.TestAttribute]&#xD;&#xA;	public void $Test$()&#xD;&#xA;	{&#xD;&#xA;		var t = new $TypeToTest$()&#xD;&#xA;		$END$&#xD;&#xA;	}&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="TypeToTest" expression="" initialRange="1" />
          <Variable name="Test" expression="" initialRange="0" />
        </Variables>
        <CustomProperties />
      </Template>
      <Template uid="e1854545-5ec7-4031-a0ef-9946c2f801d3" shortcut="eann" description="" text="Enforce.Argument($Argument$, &quot;$Argument$&quot;);$END$" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="Everywhere" minimumLanguageVersion="2.0" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="Argument" expression="parameterOfType(&quot;System.object&quot;)" initialRange="0" />
        </Variables>
        <CustomProperties />
      </Template>
    </LiveTemplates>
    <Surrounds />
    <FileTemplates />
  </SharedSolutionTemplateManager>
  <CodeAnnotations>
    <Namespace>System.Diagnostics.CodeAnalysis</Namespace>
    <DefaultNamespace>System.Diagnostics.CodeAnalysis</DefaultNamespace>
  </CodeAnnotations>
</Configuration>